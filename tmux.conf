set-option -g default-command "zsh"
set-option -g default-terminal "tmux-256color"
set-option -s default-terminal "tmux-256color"
set-option -g terminal-overrides "alacritty:RGB" # Enable truecolor support in alacritty
set-option -sa terminal-overrides ",xterm*:Tc" # Enable truecolor support in xterm
set-option -g escape-time 0
set-option -g repeat-time 1000
set-option -g history-limit 50000
set-option -g display-time 4000
set-option -g status-interval 1
set-option -g aggressive-resize on
set-option -g window-size latest
set-option -g renumber-windows on
set-option -g mouse on
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g status-keys emacs
set-option -g focus-events on
set-option -g mode-keys vi
set-option -g prefix C-Space
set-option -g set-titles on

### Keys

## Terminal special combos
C_M_lbracket="\u00a0"
C_M_rbracket="\u00a1"
C_M_S_lbracket="\u00a2"
C_M_S_rbracket="\u00a3"

C_M_S_h="\u00a4"
C_M_S_j="\u00a5"
C_M_S_k="\u00a6"
C_M_S_l="\u00a7"

C_M_apostrophe="\u00a8"
C_M_semicolon="\u00a9"
C_M_S_dblquote="\u00b0"
C_M_S_colon="\u00b1"

C_M_return="\u00b2"

C_M_key1="\u00c1"
C_M_key2="\u00c2"
C_M_key3="\u00c3"
C_M_key4="\u00c4"
C_M_key5="\u00c5"
C_M_key6="\u00c6"
C_M_key7="\u00c7"
C_M_key8="\u00c8"
C_M_key9="\u00c9"

C_S_h="\u00d0"
C_S_j="\u00d1"
C_S_k="\u00d2"
C_S_l="\u00d3"

C_slash="\u00d4"

## Bindings
unbind-key C-b
unbind-key [
unbind-key Escape
unbind-key C-[
unbind-key Space
unbind-key d

bind-key C-Space send-prefix

bind-key s switch-client -Tt_s
bind-key v switch-client -Tt_v
bind-key C-Space switch-client -Tt_♥

bind-key -Tt_s e switch-client -Troot \; choose-tree
bind-key -Tt_♥ f switch-client -Troot \; resize-pane -Z

bind-key ` copy-mode

bind-key -r M-] next-layout
bind-key -r M-[ next-layout

bind-key -nr "$C_M_S_h" swap-pane -s '{left-of}'
bind-key -nr "$C_M_S_j" swap-pane -s '{down-of}'
bind-key -nr "$C_M_S_k" swap-pane -s '{up-of}'
bind-key -nr "$C_M_S_l" swap-pane -s '{right-of}'

bind-key -nr "$C_S_h"  if-shell -F "#{pane_at_left}" {
  if-shell "[[ '#{pane_at_top}#{pane_at_bottom}' =~ 0 ]]" {
    split-window -fhb
    swap-pane -t !
    kill-pane -t !
  }
} {
  if-shell "[[ '#{pane_at_bottom}' == 1 ]]" {
    join-pane -t '{left-of}'
  } {
    join-pane -bt '{left-of}'
  }
}

bind-key -nr "$C_S_j"  if-shell -F "#{pane_at_bottom}" {
  if-shell "[[ '#{pane_at_top}#{pane_at_bottom}' =~ 01|10 ]]" {
    if-shell "[[ '#{pane_at_left}' == 1 ]]" {
      join-pane -bt '{right-of}'
    } {
      join-pane -t '{right-of}'
    }
  }
} {
  if-shell "[[ '#{pane_at_left}' == 1 ]]" {
    join-pane -bht '{down-of}'
  } {
    join-pane -ht '{down-of}'
  }
}

bind-key -nr "$C_S_k" if-shell -F "#{pane_at_top}" {
  if-shell "[[ '#{pane_at_top}#{pane_at_bottom}' =~ 01|10 ]]" {
    if-shell "[[ '#{pane_at_left}' == 1 ]]" {
      join-pane -bt '{right-of}'
    } {
      join-pane -t '{right-of}'
    }
  }
} {
  if-shell "[[ '#{pane_at_left}' == 1 ]]" {
    join-pane -bht '{up-of}'
  } {
    join-pane -ht '{up-of}'
  }
}

bind-key -nr "$C_S_l" if-shell -F "#{pane_at_right}" {
  if-shell "[[ '#{pane_at_top}#{pane_at_bottom}' =~ 0 ]]" {
    split-window -fh
    swap-pane -t !
    kill-pane -t !
  }
} {
  if-shell "[[ '#{pane_at_bottom}' == 1 ]]" {
    join-pane -t '{right-of}'
  } {
    join-pane -bt '{right-of}'
  }
}

# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -DZ"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -LZ"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -UZ"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -RZ"

bind-key -n M-H select-pane -LZ
bind-key -n M-J select-pane -DZ
bind-key -n M-K select-pane -UZ
bind-key -n M-L select-pane -RZ

bind-key -r j select-pane -DZ
bind-key -r h select-pane -LZ
bind-key -r k select-pane -UZ
bind-key -r l select-pane -RZ

bind-key -n "$C_M_lbracket" resize-pane -L 4
bind-key -n "$C_M_rbracket" resize-pane -R 4
bind-key -n "$C_M_S_lbracket" resize-pane -U 4
bind-key -n "$C_M_S_rbracket" resize-pane -D 4

bind-key a last-window
bind-key C-a last-window
bind-key -r "M-'" next-window
bind-key -r "M-;" previous-window

bind-key -n C-M-a last-window
bind-key -n "$C_M_semicolon" previous-window
bind-key -n "$C_M_apostrophe" next-window
bind-key -n "$C_M_semicolon" previous-window
bind-key -n "$C_M_S_dblquote" swap-window -dt +1
bind-key -n "$C_M_S_colon" swap-window -dt -1
bind-key -n M-A last-pane

_new_pwd='tmux new-window -c "$(readlink /proc/#{pane_pid}/cwd)"'
new_window_pwd='tmux new-window -c "$(readlink /proc/#{pane_pid}/cwd)"'
split_window_pwd='tmux split-window -c "$(readlink /proc/#{pane_pid}/cwd)"'

bind-key V run-shell "$split_window_pwd -h"
bind-key S run-shell "$split_window_pwd -v"

bind-key C-v run-shell "$split_window_pwd -hl 20%"
bind-key C-s run-shell "$split_window_pwd -vl 20%"

bind-key -Tt_v v switch-client -Troot \; run-shell "$split_window_pwd -h"
bind-key -Tt_s s switch-client -Troot \; run-shell "$split_window_pwd -v"

bind-key -n "$C_M_return" run-shell "$new_window_pwd"

bind-key "1" if-shell 'tmux select-window -t :1' '' "run-shell '$new_window_pwd -t :1'"
bind-key "2" if-shell 'tmux select-window -t :2' '' "run-shell '$new_window_pwd -t :2'"
bind-key "3" if-shell 'tmux select-window -t :3' '' "run-shell '$new_window_pwd -t :3'"
bind-key "4" if-shell 'tmux select-window -t :4' '' "run-shell '$new_window_pwd -t :4'"
bind-key "5" if-shell 'tmux select-window -t :5' '' "run-shell '$new_window_pwd -t :5'"
bind-key "6" if-shell 'tmux select-window -t :6' '' "run-shell '$new_window_pwd -t :6'"
bind-key "7" if-shell 'tmux select-window -t :7' '' "run-shell '$new_window_pwd -t :7'"
bind-key "8" if-shell 'tmux select-window -t :8' '' "run-shell '$new_window_pwd -t :8'"
bind-key "9" if-shell 'tmux select-window -t :9' '' "run-shell '$new_window_pwd -t :9'"

bind-key -n "$C_M_key1" if-shell 'tmux select-window -t :1' '' "run-shell '$new_window_pwd -t :1'"
bind-key -n "$C_M_key2" if-shell 'tmux select-window -t :2' '' "run-shell '$new_window_pwd -t :2'"
bind-key -n "$C_M_key3" if-shell 'tmux select-window -t :3' '' "run-shell '$new_window_pwd -t :3'"
bind-key -n "$C_M_key4" if-shell 'tmux select-window -t :4' '' "run-shell '$new_window_pwd -t :4'"
bind-key -n "$C_M_key5" if-shell 'tmux select-window -t :5' '' "run-shell '$new_window_pwd -t :5'"
bind-key -n "$C_M_key6" if-shell 'tmux select-window -t :6' '' "run-shell '$new_window_pwd -t :6'"
bind-key -n "$C_M_key7" if-shell 'tmux select-window -t :7' '' "run-shell '$new_window_pwd -t :7'"
bind-key -n "$C_M_key8" if-shell 'tmux select-window -t :8' '' "run-shell '$new_window_pwd -t :8'"
bind-key -n "$C_M_key9" if-shell 'tmux select-window -t :9' '' "run-shell '$new_window_pwd -t :9'"

bind-key   @ choose-window 'join-pane -h -s "%%"'
bind-key C-@ choose-window 'join-pane    -s "%%"'

bind-key -n M-~ choose-window 'join-pane -h -s "%%"'
bind-key -n M-! if-shell 'tmux has-session -t :1' 'join-pane -ht :1' 'break-pane -t :1'
bind-key -n M-@ if-shell 'tmux has-session -t :2' 'join-pane -ht :2' 'break-pane -t :2'
bind-key -n M-# if-shell 'tmux has-session -t :3' 'join-pane -ht :3' 'break-pane -t :3'
bind-key -n M-$ if-shell 'tmux has-session -t :4' 'join-pane -ht :4' 'break-pane -t :4'
bind-key -n M-% if-shell 'tmux has-session -t :5' 'join-pane -ht :5' 'break-pane -t :5'
bind-key -n M-^ if-shell 'tmux has-session -t :6' 'join-pane -ht :6' 'break-pane -t :6'
bind-key -n M-& if-shell 'tmux has-session -t :7' 'join-pane -ht :7' 'break-pane -t :7'
bind-key -n M-* if-shell 'tmux has-session -t :8' 'join-pane -ht :8' 'break-pane -t :8'
bind-key -n M-( if-shell 'tmux has-session -t :9' 'join-pane -ht :9' 'break-pane -t :9'

bind-key x set-option -gF @tmux-cut-pane "#{pane_id}" \; display-message "Cut pane [#{@tmux-cut-pane}] #{pane_title}"
bind-key p run-shell -C "move-pane -s #{@tmux-cut-pane}" \; display-message "Paste pane [#{@tmux-cut-pane}] #{pane_title}"

bind-key X set-option -gF @tmux-cut-window "#{window_id}" \; display-message "Cut window [#{@tmux-cut-window}] #{window_name}"
bind-key P run-shell -C "move-window -s =#{@tmux-cut-window}" \; display-message "Paste window [#{@tmux-cut-window}] #{window_name}"

bind-key C-f resize-pane -Z

bind-key r command-prompt "rename-window '%%'"

bind-key Q confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key C-w confirm-before -p "kill-window #W? (y/n)" kill-window

bind-key R source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux.conf"

comark_fzf_tmuxifier='. $GIT_PROJECTS_DIR/comark/comark.plugin.zsh; FZF_DEFAULT_OPTS= , || exit; TX_ROOT="$PWD" tx load-window'

### Tmuxifier
bind-key N display-popup -E zsh -ic "$comark_fzf_tmuxifier twf"
bind-key n switch-client -Tt_n
bind-key -Tt_n n switch-client -Troot \; display-popup -E zsh -ic "$comark_fzf_tmuxifier twf"
bind-key -Tt_n 2 switch-client -Troot \; display-popup -E zsh -ic "$comark_fzf_tmuxifier twf2"
bind-key -Tt_n 4 switch-client -Troot \; display-popup -E zsh -ic "$comark_fzf_tmuxifier twf4"

bind-key M display-popup -E zsh -ic "$comark_fzf_tmuxifier twfz"
bind-key m switch-client -Tt_m
bind-key -Tt_m m switch-client -Troot \; display-popup -E zsh -ic "$comark_fzf_tmuxifier twfz"
bind-key -Tt_m 2 switch-client -Troot \; display-popup -E zsh -ic "$comark_fzf_tmuxifier twfz2"
bind-key -Tt_m 4 switch-client -Troot \; display-popup -E zsh -ic "$comark_fzf_tmuxifier twfz4"

### Look & Feel
set-option -g pane-border-lines single

set-option -g pane-active-border-style "fg=color213"
set-option -g message-style 'bg=magenta,fg=white,bold'

set-option -g set-titles-string            '#{window_index}#{?#{!=:#{window_name},zsh},:#{window_name},}#{?#{>:#{window_panes},1},[+#{e|-:#{window_panes},1}],}#{?window_zoomed_flag,[Z],}#{?#{>:#{session_windows},1},(#{window_index}/#{session_windows}),}'
set-option -g window-status-format         ' #{window_index}#{?#{!=:#{window_name},zsh},:#{window_name},}#{?#{>:#{window_panes},1},[+#{e|-:#{window_panes},1}],}#{?window_zoomed_flag,[Z],} '
set-option -g window-status-current-format ' #{window_index}#{?#{!=:#{window_name},zsh},:#{window_name},}#{?#{>:#{window_panes},1},[+#{e|-:#{window_panes},1}],}#{?window_zoomed_flag,[Z],} '
set-option -g window-status-current-style  'bg=magenta,fg=white,bold'

set-option -g status-right-length 180
set-option -g status-style 'bg=color8'
set-option -g status-left '#{prefix_highlight} '
set-option -g status-right '#{pane_title} '
# set-option -g status-right '#[fg=white,bg=magenta,bold] %a %d %b #[fg=white,bg=color105,bold] %H:%M '

### Plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin "b0o/tmux-autoreload"

set-option -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set-option -g @prefix_highlight_fg 'white'
set-option -g @prefix_highlight_bg 'red'
set-option -g @prefix_highlight_show_copy_mode 'on'
set-option -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'
set-option -g @prefix_highlight_show_sync_mode 'on'
set-option -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green'
set-option -g @prefix_highlight_prefix_prompt '♥#{?#{m:t_*,#{client_key_table}}, #{s/t_//:client_key_table},}'
set-option -g @prefix_highlight_copy_prompt 'c'
set-option -g @prefix_highlight_sync_prompt 's'
set-option -g @prefix_highlight_output_prefix ''
set-option -g @prefix_highlight_output_suffix ''
set-option -g @prefix_highlight_empty_prompt ''
set-option -g @prefix_highlight_empty_attr 'fg=white,bg=magenta,bold'
set-option -g @prefix_highlight_empty_has_affixes 'on'
set-option -g @prefix_highlight_empty_prompt '❤'
set-option -g @prefix_highlight_output_prefix ''
set-option -g @prefix_highlight_output_suffix ''

set-option -g @plugin 'fcsonline/tmux-thumbs'
set-option -g @thumbs-key Tab
set-option -g @thumbs-alphabet qwerty-left-hand
set-option -g @thumbs-reverse enabled
set-option -g @thumbs-unique enabled
set-option -g @thumbs-position left
set-option -g @thumbs-regexp-1 '(\S*[{}|:;>?./!@#$%^&*()_+=-]\S+)+'
set-option -g @thumbs-command 'tmux set-buffer -- "{}" && tmux paste-buffer'
set-option -g @thumbs-upcase-command '_xc "{}"; tmux display-message "Copied {}"'

run-shell "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
