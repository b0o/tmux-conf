set-option -g default-command "zsh"
set-option -g default-terminal "screen-256color"
set-option -s default-terminal "screen-256color"
set-option -g escape-time 0
set-option -g repeat-time 1000
set-option -g history-limit 50000
set-option -g display-time 4000
set-option -g status-interval 1
set-option -g aggressive-resize on
set-option -g renumber-windows on
set-option -g mouse on
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g status-keys emacs
set-option -g focus-events on
set-option -g mode-keys vi
set-option -g prefix C-Space

### Keys

unbind-key C-b
unbind-key [
unbind-key Escape
unbind-key C-[
unbind-key Space

bind-key C-Space send-prefix

bind-key s switch-client -Tt_s
bind-key v switch-client -Tt_v
bind-key C-Space switch-client -Tt_♥

bind-key -Tt_s e switch-client -Troot \; choose-tree
bind-key -Tt_♥ f switch-client -Troot \; resize-pane -Z

bind-key ` copy-mode

bind-key -r M-] next-layout
bind-key -r M-[ next-layout

bind-key -nr "\u00a4" swap-pane -s '{left-of}'
bind-key -nr "\u00a5" swap-pane -s '{down-of}'
bind-key -nr "\u00a6" swap-pane -s '{up-of}'
bind-key -nr "\u00a7" swap-pane -s '{right-of}'

bind-key -nr M-H if-shell -F "#{pane_at_left}" {
  if-shell "[[ '#{pane_at_top}#{pane_at_bottom}' =~ 0 ]]" {
    split-window -fhb
    swap-pane -t !
    kill-pane -t !
  }
} {
  if-shell "[[ '#{pane_at_bottom}' == 1 ]]" {
    join-pane -t '{left-of}'
  } {
    join-pane -bt '{left-of}'
  }
}

bind-key -nr M-J if-shell -F "#{pane_at_bottom}" {
  if-shell "[[ '#{pane_at_top}#{pane_at_bottom}' =~ 01|10 ]]" {
    if-shell "[[ '#{pane_at_left}' == 1 ]]" {
      join-pane -bt '{right-of}'
    } {
      join-pane -t '{right-of}'
    }
  }
} {
  if-shell "[[ '#{pane_at_left}' == 1 ]]" {
    join-pane -bht '{down-of}'
  } {
    join-pane -ht '{down-of}'
  }
}

bind-key -nr M-K if-shell -F "#{pane_at_top}" {
  if-shell "[[ '#{pane_at_top}#{pane_at_bottom}' =~ 01|10 ]]" {
    if-shell "[[ '#{pane_at_left}' == 1 ]]" {
      join-pane -bt '{right-of}'
    } {
      join-pane -t '{right-of}'
    }
  }
} {
  if-shell "[[ '#{pane_at_left}' == 1 ]]" {
    join-pane -bht '{up-of}'
  } {
    join-pane -ht '{up-of}'
  }
}

bind-key -nr M-L if-shell -F "#{pane_at_right}" {
  if-shell "[[ '#{pane_at_top}#{pane_at_bottom}' =~ 0 ]]" {
    split-window -fh
    swap-pane -t !
    kill-pane -t !
  }
} {
  if-shell "[[ '#{pane_at_bottom}' == 1 ]]" {
    join-pane -t '{right-of}'
  } {
    join-pane -bt '{right-of}'
  }
}

# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

bind-key V split-window -h
bind-key S split-window -v

bind-key -Tt_v v switch-client -Troot \; split-window -h
bind-key -Tt_s s switch-client -Troot \; split-window -v

bind-key -n "\u00b2" new-window         # C-M-Return

bind-key -n "\u00a0" resize-pane -L 4   # C-M-[
bind-key -n "\u00a1" resize-pane -R 4   # C-M-]
bind-key -n "\u00a2" resize-pane -U 4   # C-M-{
bind-key -n "\u00a3" resize-pane -D 4   # C-M-}

bind-key -n C-M-a    last-window
bind-key -n "\u00a8" next-window        # C-M-;
bind-key -n "\u00a9" previous-window    # C-M-'
bind-key -n "\u00b0" swap-window -dt +1 # C-M-"
bind-key -n "\u00b1" swap-window -dt -1 # C-M-:

bind-key -n "\u00c1" if-shell 'tmux select-window -t :1' '' 'new-window -t :1' # C-M-1
bind-key -n "\u00c2" if-shell 'tmux select-window -t :2' '' 'new-window -t :2' # C-M-2
bind-key -n "\u00c3" if-shell 'tmux select-window -t :3' '' 'new-window -t :3' # C-M-3
bind-key -n "\u00c4" if-shell 'tmux select-window -t :4' '' 'new-window -t :4' # C-M-4
bind-key -n "\u00c5" if-shell 'tmux select-window -t :5' '' 'new-window -t :5' # C-M-5
bind-key -n "\u00c6" if-shell 'tmux select-window -t :6' '' 'new-window -t :6' # C-M-6
bind-key -n "\u00c7" if-shell 'tmux select-window -t :7' '' 'new-window -t :7' # C-M-7
bind-key -n "\u00c8" if-shell 'tmux select-window -t :8' '' 'new-window -t :8' # C-M-8
bind-key -n "\u00c9" if-shell 'tmux select-window -t :9' '' 'new-window -t :9' # C-M-9

bind-key   @ choose-window 'join-pane -h -s "%%"'
bind-key C-@ choose-window 'join-pane    -s "%%"'

bind-key -n M-~ choose-window 'join-pane -h -s "%%"'
bind-key -n M-! if-shell 'tmux has-session -t :1' 'join-pane -ht :1' 'break-pane -ht :1'
bind-key -n M-@ if-shell 'tmux has-session -t :2' 'join-pane -ht :2' 'break-pane -ht :2'
bind-key -n M-# if-shell 'tmux has-session -t :3' 'join-pane -ht :3' 'break-pane -ht :3'
bind-key -n M-$ if-shell 'tmux has-session -t :4' 'join-pane -ht :4' 'break-pane -ht :4'
bind-key -n M-% if-shell 'tmux has-session -t :5' 'join-pane -ht :5' 'break-pane -ht :5'
bind-key -n M-^ if-shell 'tmux has-session -t :6' 'join-pane -ht :6' 'break-pane -ht :6'
bind-key -n M-& if-shell 'tmux has-session -t :7' 'join-pane -ht :7' 'break-pane -ht :7'
bind-key -n M-* if-shell 'tmux has-session -t :8' 'join-pane -ht :8' 'break-pane -ht :8'
bind-key -n M-( if-shell 'tmux has-session -t :9' 'join-pane -ht :9' 'break-pane -ht :9'

bind-key C-f resize-pane -Z

bind-key r command-prompt "rename-window '%%'"

bind-key R source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux.conf"

### Look & Feel
set-option -g pane-border-lines single

set-option -g pane-active-border-style "fg=color213"
set-option -g message-style 'bg=magenta,fg=white,bold'

set-option -g window-status-format         ' #{window_index}#{?#{!=:#{window_name},zsh},:#{window_name},}#{?#{>:#{window_panes},1},[+#{e|-:#{window_panes},1}],}#{?window_zoomed_flag,[Z],} '
set-option -g window-status-current-format ' #{window_index}#{?#{!=:#{window_name},zsh},:#{window_name},}#{?#{>:#{window_panes},1},[+#{e|-:#{window_panes},1}],}#{?window_zoomed_flag,[Z],} '
set-option -g window-status-current-style  'bg=magenta,fg=white,bold'

set-option -g status-right-length 180
set-option -g status-style 'bg=color8'
set-option -g status-left '#{prefix_highlight} '
set-option -g status-right ''
# set-option -g status-right '#[fg=white,bg=magenta,bold] %a %d %b #[fg=white,bg=color105,bold] %H:%M '

### Plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin "b0o/tmux-autoreload"

set-option -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set-option -g @prefix_highlight_fg 'white'
set-option -g @prefix_highlight_bg 'red'
set-option -g @prefix_highlight_show_copy_mode 'on'
set-option -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'
set-option -g @prefix_highlight_show_sync_mode 'on'
set-option -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green'
set-option -g @prefix_highlight_prefix_prompt '♥#{?#{m:t_*,#{client_key_table}}, #{s/t_//:client_key_table},}'
set-option -g @prefix_highlight_copy_prompt 'c'
set-option -g @prefix_highlight_sync_prompt 's'
set-option -g @prefix_highlight_output_prefix ''
set-option -g @prefix_highlight_output_suffix ''
set-option -g @prefix_highlight_empty_prompt ''
set-option -g @prefix_highlight_empty_attr 'fg=white,bg=magenta,bold'
set-option -g @prefix_highlight_empty_has_affixes 'on'
set-option -g @prefix_highlight_empty_prompt '♥'
set-option -g @prefix_highlight_output_prefix ''
set-option -g @prefix_highlight_output_suffix ''

set-option -g @plugin 'laktak/extrakto'
set-option -g @extrakto_clip_tool '_xc -i'
set-option -g @extrakto_open_tool 'open'

run-shell "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
